{"remainingRequest":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\src\\views\\Index.vue?vue&type=style&index=0&id=23543608&lang=less&scoped=true&","dependencies":[{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\src\\views\\Index.vue","mtime":1600412515899},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscode-work\\offline\\vue\\eyepetizer_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jb21tdW5pdHkgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsNCg0KICAuY29tbXVuaXR5LWl0ZW0gew0KICAgIHdpZHRoOiAxNzBweDsNCg0KICAgIC9kZWVwLyAucGljdHVyZS1mb2xsb3ctY2FyZCB7DQogICAgICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDsNCiAgICAgIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDsNCiAgICB9DQogICAgL2RlZXAvIC5tdWx0aXBhcnQgew0KICAgICAgcmlnaHQ6IDZweDsNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"index\">\r\n  <van-tabs v-model=\"active\" swipeable animated :duration=\"0.5\" @rendered=\"getContent(false, null)\">\r\n    <van-tab v-for=\"(item, index) in tabs\" :title=\"item.name\" :key=\"index\">\r\n      <template v-if=\"tabs[active].itemList && tabs[active].itemList.length > 0\">\r\n        <van-pull-refresh v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n          <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"- The End -\" @load=\"onLoad\">\r\n            <template v-if=\"item.name == '社区'\">\r\n              <div class=\"community\">\r\n                <moment class=\"community-item\" :list=\"tabs[active].itemList.filter((_item, index) => index % 2 === 0)\" />\r\n                <moment class=\"community-item\" :list=\"tabs[active].itemList.filter((_item, index) => index % 2 !== 0)\" />\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <moment :list=\"tabs[active].itemList\" />\r\n            </template>\r\n          </van-list>\r\n        </van-pull-refresh>\r\n      </template>\r\n    </van-tab>\r\n  </van-tabs>\r\n</div>\n</template>\r\n\r\n<script>\nimport { getUrl } from '../utils/common.js';\r\nimport moment from '../components/Moment.vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      finished: true,\r\n      refreshing: false,\r\n      active: 0,\r\n      tabs: [],\r\n      content: null\r\n    }\r\n  },\r\n  components: {\r\n    moment\r\n  },\r\n  methods: {\r\n    // tabs\r\n    getCatagory() {\r\n      this.$get('/api/v5/index/tab/list').then(data => {\r\n        for (const item of data.tabInfo.tabList) {\r\n          item.itemList = [];\r\n          item.count = null;\r\n          item.total = null;\r\n          item.nextPageUrl = null;\r\n          item.adExist = null;\r\n        }\r\n        this.tabs = data.tabInfo.tabList;\r\n        this.active = data.tabInfo.defaultIdx;\r\n\r\n        if (this.active == 0) {\r\n          this.getContent(false, null);\r\n        }\r\n      });\r\n    },\r\n    // 每个tab的内容\r\n    getContent(refresh, url) {\r\n      this.$get(getUrl(url || this.tabs[this.active].apiUrl)).then(data => {\r\n        if (refresh) {\r\n          this.tabs[this.active].itemList = [];\r\n        }\r\n        this.tabs[this.active].itemList = this.tabs[this.active].itemList.concat(data.itemList);\r\n        this.tabs[this.active].count = data.count;\r\n        this.tabs[this.active].total = data.total;\r\n        this.tabs[this.active].nextPageUrl = data.nextPageUrl;\r\n        this.tabs[this.active].adExist = data.adExist;\r\n\r\n        this.refreshing = false;\r\n        this.loading = false;\r\n        if (data.nextPageUrl) {\r\n          this.finished = false;\r\n        } else {\r\n          this.finished = true;\r\n        }\r\n      }).catch(err => {\r\n        this.refreshing = false;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    onLoad() {\r\n      if (this.tabs[this.active]['nextPageUrl']) {\r\n        this.loading = true;\r\n        this.getContent(false, this.tabs[this.active]['nextPageUrl']);\r\n      } else {\r\n        this.finished = true;\r\n      }\r\n    },\r\n    onRefresh() {\r\n      this.refreshing = true;\r\n      this.getContent(true);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getCatagory();\r\n  }\r\n}\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.community {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n\r\n  .community-item {\r\n    width: 170px;\r\n\r\n    /deep/ .picture-follow-card {\r\n      padding-left: 0 !important;\r\n      padding-right: 0 !important;\r\n    }\r\n    /deep/ .multipart {\r\n      right: 6px;\r\n    }\r\n  }\r\n}\r\n</style>>\r\n"]}]}